
x-db-env: &db-env
  DB_HOST: '${DB_HOST:-db-engine}'
  DB_PORT: '${DB_PORT:-5432}'
  DB_DATABASE: '${DB_DATABASE:-db_engine}'
  DB_USERNAME: '${DB_USERNAME:-misesdev}'
  DB_PASSWORD: '${DB_PASSWORD:-secret}'
  ELASTIC_PORT: ${ELASTIC_PORT:-9200}
  ELASTIC_URL: http://elasticsearch:9200

x-indexer-common: &indexer-common
  working_dir: /app
  depends_on:
    - db-engine
    - elasticsearch
  environment:
    <<: *db-env
  restart: unless-stopped
  ulimits:
    nproc: 65535
    nofile:
      soft: 20000
      hard: 40000
  networks:
    - app-network

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms3g -Xmx3g
      - xpack.security.enabled=false #disabled auth
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "${ELASTIC_PORT:-9200}:${ELASTIC_PORT:-9200}"
    restart: unless-stopped
    networks:
      - app-network

  db-engine:
    image: 'postgres:15'
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE:-db_engine}'
      POSTGRES_USER: '${DB_USERNAME:-misesdev}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "${API_PORT:-8001}:80"
    volumes:
      - ./api:/var/www/html
      - ./api/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    networks:
      - app-network

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    working_dir: /var/www/html
    environment:
      <<: *db-env
    depends_on:
      - elasticsearch
      - db-engine
      - nginx
      - redis
    restart: unless-stopped
    networks:
      - app-network

  app:
    build:
      context: ./app/
    environment:
      API_ENGINE_URL: http://nginx/api
      NODE_ENV: production
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    networks:
      - app-network

  pubkeys_indexer:
    build:
      context: ./indexers
      dockerfile: pubkeys/Dockerfile
    <<: *indexer-common

  profiles_indexer:
    build:
      context: ./indexers
      dockerfile: profiles/Dockerfile
    <<: *indexer-common

  notes_indexer:
    build:
      context: ./indexers
      dockerfile: notes/Dockerfile
    <<: *indexer-common

  relays_indexer:
    build:
      context: ./indexers
      dockerfile: relays/Dockerfile
    <<: *indexer-common

volumes:
  esdata:
    driver: local
  pgdata:
    driver: local

networks:
  app-network:
    driver: bridge

