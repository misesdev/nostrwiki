services:

  db-engine:
    image: 'postgres:15'
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE:-db_engine}'
      POSTGRES_USER: '${DB_USERNAME:-misesdev}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - './api/pgsql/data:/var/lib/postgres/data'
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "${API_PORT:-8001}:80"
    volumes:
      - ./api:/var/www/html
      - ./api/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    networks:
      - app-network

  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    working_dir: /var/www/html
    volumes:
      - ./api:/var/www/html
    environment:
      DB_HOST: '${DB_HOST:-secret}'
      DB_PORT: '${DB_PORT:-5432}'
      DB_DATABASE: '${DB_DATABASE:-db_engine}'
      DB_USERNAME: '${DB_USERNAME:-misesdev}'
      DB_PASSWORD: '${DB_PASSWORD:-secret}'
      TZ: America/Sao_Paulo
    depends_on:
      - db-engine
      - nginx
      - redis
    restart: unless-stopped
    networks:
      - app-network

  app:
    build:
      context: ./app/
    environment:
      API_ENGINE_URL: http://nginx/api
      NODE_ENV: production
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    networks:
      - app-network

  pubkeys_indexer:
    build: ./indexers/pubkeys/
    working_dir: /app
    volumes:
      - ./indexer/settings.local.json:/app/settings.local.json
      - indexer:/app/data
    depends_on:
      - db-engine
    environment:
      TZ: America/Sao_Paulo
      DB_HOST: '${DB_HOST:-db-engine}'
      DB_PORT: '${DB_PORT:-5432}'
      DB_DATABASE: '${DB_DATABASE:-db_engine}'
      DB_USERNAME: '${DB_USERNAME:-misesdev}'
      DB_PASSWORD: '${DB_PASSWORD:-secret}'
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

